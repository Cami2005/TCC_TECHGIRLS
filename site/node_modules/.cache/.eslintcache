[{"C:\\Users\\Angelica\\Documents\\tcc\\TCC_TECHGIRLS\\site\\src\\pages\\Administrador\\AlterarProduto\\index.js":"1"},{"size":11353,"mtime":1665430527522,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","suppressedMessages":"6","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"7"},"1cbxl6r","C:\\Users\\Angelica\\Documents\\tcc\\TCC_TECHGIRLS\\site\\src\\pages\\Administrador\\AlterarProduto\\index.js",["8","9","10","11","12","13","14","15"],[],"import { listarCategorias, listarTemas, buscarProdutoPorId, alterarProduto } from \"../../../API/CadProduto\";\r\nimport MenuAdmin from \"../../../components/pagAdm\";\r\nimport DeletarItem from \"../../../components/delete\";\r\nimport { API_URL } from \"../../../API/config.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nexport default function Index() {\r\n\r\n    // VARIÁVEIS DE ESTADO\r\n\r\n    const { id } = useParams();\r\n \r\n    const [nome, setNome] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [preco, setPreco] = useState(0.0);\r\n    const [disponivel, setDisponivel] = useState(true);\r\n\r\n    const [idCategoria, setIdCategoria] = useState(0);\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    const [idTemas, setIdTemas] = useState(0);\r\n    const [Temas, setTemas] = useState([]);\r\n\r\n    const [catSelecionadas, setCatSelecionadas] = useState([]);\r\n\r\n    \r\n    //cor\r\n    const [cor, setCor] = useState([]);\r\n    const [novaCor, setNovaCor] = useState('');\r\n\r\n    //tamanho\r\n    const [tamanho, setTamanho] = useState([]);\r\n    const [novoTamanho, setNovoTamanho] = useState('');\r\n    \r\n\r\n    //imagens\r\n\r\n    const [imagem1, setImagem1] = useState();\r\n    const [imagem2, setImagem2] = useState();\r\n    const [imagem3, setImagem3] = useState();\r\n    const [imagem4, setImagem4] = useState();\r\n\r\n    // imagem destaque\r\n\r\n    const [destaque, setDestaque] = useState();\r\n\r\n// FUNÇÕES\r\n\r\n    //funções cor e tamanho (renderização)\r\n\r\n\r\n    function delay(milliseconds) {\r\n        return new Promise (resolve => setTimeout(resolve, milliseconds)) // acabar com o delay\r\n    }\r\n\r\n    function arrayCor(){\r\n            let c= [... cor, novaCor];\r\n            setCor(c);\r\n    }\r\n\r\n    async function arrayTamanho(){\r\n        let T= [...tamanho, novoTamanho];\r\n        setTamanho(T);\r\n    }\r\n\r\n\r\n    function Remover(t){\r\n        let c = cor.filter(item => item !== t);\r\n        let T = tamanho.filter(item => item !== t);\r\n        setCor(c)\r\n        setTamanho(T)\r\n    }\r\n\r\n    function Limpar(){\r\n        setCor([]);\r\n        setTamanho([]);\r\n    }\r\n\r\n    //função imagem\r\n    function escolherImagem(inputId) {\r\n       document.getElementById(inputId).click();\r\n    }\r\n\r\n    \r\n    function exibirImagem(imagem) {\r\n        if (imagem == undefined){\r\n            return '../images/add.png'\r\n        }\r\n        else if(typeof (imagem) == 'string'){\r\n            return `${API_URL}/${imagem}`\r\n        }\r\n        else {\r\n            return URL.createObjectURL(imagem)\r\n        }\r\n    }\r\n \r\n    function buscarNomeCategoria(id) {\r\n        const cat = categorias.find(item => item.id == id);\r\n        return cat.categoria;\r\n    }\r\n    \r\n    function adicionarCategoria() {\r\n        if (!catSelecionadas.find(item => item == idCategoria)) {\r\n            const categorias = [...catSelecionadas, idCategoria];\r\n            setCatSelecionadas(categorias);\r\n        }\r\n    }\r\n\r\n\r\n    async function carregarTemas() {\r\n        const r = await listarTemas();\r\n        setTemas(r);\r\n    }\r\n\r\n\r\n    async function carregarCategorias() {\r\n        const r = await listarCategorias();\r\n        setCategorias(r);\r\n    }\r\n\r\n    async function carregarProduto(){\r\n        if (!id) {\r\n            throw new Error('Produto não encontrado')\r\n        }\r\n        const r= await buscarProdutoPorId(id);\r\n        setIdCategoria(r.info.categoria);\r\n        setIdTemas(r.info.tema);\r\n        setNome(r.info.nome);\r\n        setDescricao(r.info.descricao);\r\n        setPreco(r.info.preco);\r\n        setDisponivel(r.info.disponivel);\r\n        const a = r.cores;\r\n        const b = r.tamanho;\r\n        console.log(a)\r\n        console.log(b)\r\n\r\n        setCor(a);\r\n        setTamanho(b);\r\n\r\n        if(r.imagens.length > 0){\r\n            setImagem1(r.imagens[0]);\r\n        }\r\n        if(r.imagens.length > 1){\r\n            setImagem2(r.imagens[1]);\r\n        }\r\n        if(r.imagens.length > 2){\r\n            setImagem3(r.imagens[3]);\r\n        }\r\n        if(r.imagens.length > 3){\r\n            setImagem4(r.imagens[3]);\r\n        }\r\n        setDestaque(r.destaque.url);\r\n        \r\n    } \r\n\r\n    async function Alterar(){\r\n        try{\r\n            console.log('chamada')\r\n            console.log(idTemas)\r\n            const r = await alterarProduto(id, nome, idTemas, idCategoria, preco, descricao, disponivel);\r\n            console.log(r);\r\n            console.log('ok')\r\n            // await salvarImagens(idProduto, imagem1, imagem2, imagem3, imagem4)\r\n            alert('ok');\r\n        }\r\n        catch(err) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n// USEEFFECTS\r\n    \r\n\r\n    useEffect(() => {\r\n        Limpar();\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        carregarCategorias();\r\n        carregarTemas();\r\n        carregarProduto();\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <main className=\"inserirProduto\">\r\n\r\n        <MenuAdmin logo='../../../images/logoAdmin.png'/>\r\n\r\n        <div className=\"informacoes-produto\">\r\n\r\n            <h1> Alterar Produto </h1>\r\n\r\n            <div className=\"inserir\">\r\n\r\n                <div className=\"div1\">\r\n                    \r\n\r\n                    <div className=\"flex-column\">\r\n                        <label> Nome do Produto </label>\r\n                        <input type=\"text\" value={nome} onChange={e=> setNome(e.target.value)} className=\"input\"/>\r\n                    </div>\r\n\r\n                    <div className=\"flex-column\">\r\n                        <label> Descrição do Produto </label>\r\n                        <textarea type=\"text\" value={descricao} onChange={e=> setDescricao(e.target.value)} maxLength={100} className=\"textarea\"/>\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"flex-row space-between\">\r\n\r\n                        <div className=\"select-tamanho\">\r\n                            <label> Categoria:</label>\r\n                            <select className=\"select\" value={idCategoria} onChange={e => setIdCategoria(Number(e.target.value))}>\r\n                                <option> Vestimenta </option>\r\n\r\n                                {categorias.map(item =>\r\n                                    <option value={item.id}> {item.nome} </option>\r\n                                )}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        \r\n\r\n                        <div className=\"select-tamanho\">\r\n\r\n                            <label> Tema: </label>\r\n                            <select className=\"select\" value={idTemas} onChange={e => setIdTemas(e.target.value)}>\r\n                                <option> Harry Potter </option>\r\n\r\n                                {Temas.map(item =>\r\n                                    <option value={item.id}> {item.nome} </option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"div-array\">\r\n                        <label> Cor </label>\r\n\r\n                        <div className=\"flex-row wrapwrap\">\r\n\r\n                            <input type=\"text\" value={novaCor} onChange={e => setNovaCor(e.target.value)} className=\"input input-item\"/> \r\n                            <button onClick={arrayCor} className=\"button-ok\"> OK </button>\r\n                            \r\n                           {cor.map( item => \r\n                                <div className=\"itemzinho\">\r\n                                    <DeletarItem  \r\n                                    key={item}\r\n                                    it={item}\r\n                                    deletarit={Remover}  />\r\n                                </div>\r\n                            )}\r\n                          \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"div-array\">\r\n\r\n                        <label> Tamanhos </label>\r\n\r\n                        <div className=\"flex-row wrapwrap\">\r\n                            <input value={novoTamanho}  className=\"input input-item\" onChange={e => setNovoTamanho(e.target.value)}/> \r\n\r\n                            <button onClick={arrayTamanho} className=\"button-ok\"> OK </button>\r\n\r\n                            {tamanho.map( item => \r\n                                <div className=\"itemzinho\" >\r\n                                    <DeletarItem  \r\n                                    key={item}\r\n                                    it={item}\r\n                                    deletarit={Remover}  />\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex-column\"> \r\n\r\n                        <label > Valor </label>\r\n                        <input type=\"text\" value={preco} onChange={e=> setPreco(e.target.value)} className=\"imagem-input\"/>\r\n                   \r\n                    </div>\r\n        \r\n\r\n                    <div>\r\n                        <div> \r\n                             <label > Disponível ?</label> \r\n                             <input type=\"checkbox\" checked={disponivel} onChange={e=> setDisponivel(e.target.checked)}/>\r\n                        </div>\r\n                    </div> \r\n\r\n                </div>\r\n\r\n                <div className=\"div2\">\r\n                    <div>\r\n\r\n                        <h1> Foto Destaque </h1>\r\n\r\n                        <img \r\n                            className=\"img\" \r\n                            src={exibirImagem(destaque)}\r\n                            alt='' \r\n                            // onClick={escolherDestaque}  \r\n                        />\r\n\r\n\r\n                        <input \r\n                        type=\"file\" \r\n                        id=\"imagemDestaque\"\r\n                        onChange={e => setDestaque(e.target.files[0])} \r\n                        />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"flex-column\"> \r\n\r\n                        <h1> Fotos Extras</h1>\r\n\r\n                        <div>\r\n                            <img className=\"img\" src={exibirImagem(imagem1)} alt='' onClick={() => escolherImagem('imagem1')}/>\r\n                            <img className=\"img\" src={exibirImagem(imagem2)}  alt='' onClick={() => escolherImagem('imagem2')}/>\r\n                            <img className=\"img\" src={exibirImagem(imagem3)}  alt='' onClick={() => escolherImagem('imagem3')}/>\r\n                            <img className=\"img\" src={exibirImagem(imagem4)}  alt='' onClick={() => escolherImagem('imagem4')}/>\r\n\r\n                            <input type='file' id='imagem1' onChange={e => setImagem1(e.target.files[0])} />\r\n                            <input type='file' id='imagem2' onChange={e => setImagem2(e.target.files[0])} />\r\n                            <input type='file' id='imagem3' onChange={e => setImagem3(e.target.files[0])} />\r\n                            <input type='file' id='imagem4' onChange={e => setImagem4(e.target.files[0])} />\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <button onClick={Alterar} className=\"button centralizar\"> Salvar </button>\r\n\r\n        </div>\r\n        \r\n</main>\r\n\r\n    )\r\n}",{"ruleId":"16","severity":1,"message":"17","line":54,"column":14,"nodeType":"18","messageId":"19","endLine":54,"endColumn":19},{"ruleId":"20","severity":1,"message":"21","line":59,"column":24,"nodeType":"22","messageId":"23","endLine":59,"endColumn":25,"fix":"24"},{"ruleId":"25","severity":1,"message":"26","line":88,"column":20,"nodeType":"27","messageId":"28","endLine":88,"endColumn":22},{"ruleId":"16","severity":1,"message":"29","line":99,"column":14,"nodeType":"18","messageId":"19","endLine":99,"endColumn":33},{"ruleId":"25","severity":1,"message":"26","line":100,"column":53,"nodeType":"27","messageId":"28","endLine":100,"endColumn":55},{"ruleId":"16","severity":1,"message":"30","line":104,"column":14,"nodeType":"18","messageId":"19","endLine":104,"endColumn":32},{"ruleId":"25","severity":1,"message":"26","line":105,"column":48,"nodeType":"27","messageId":"28","endLine":105,"endColumn":50},{"ruleId":"31","severity":1,"message":"32","line":186,"column":8,"nodeType":"33","endLine":186,"endColumn":10,"suggestions":"34"},"no-unused-vars","'delay' is defined but never used.","Identifier","unusedVar","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"35","text":"36"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buscarNomeCategoria' is defined but never used.","'adicionarCategoria' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'carregarProduto'. Either include it or remove the dependency array.","ArrayExpression",["37"],[1720,1721],"",{"desc":"38","fix":"39"},"Update the dependencies array to be: [carregarProduto]",{"range":"40","text":"41"},[4789,4791],"[carregarProduto]"]