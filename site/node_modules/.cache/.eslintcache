[{"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\API\\CadProduto.js":"1","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Usuario\\nossosProdutos\\index.js":"2","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Administrador\\AddProduto\\index.js":"3","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\components\\cabecalho.js":"4","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Usuario\\Menu\\index.js":"5","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\routes.js":"6","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Administrador\\Produtos\\index.js":"7","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Administrador\\AlterarProduto\\index.js":"8","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Usuario\\cadastroUsuario\\index.js":"9"},{"size":3340,"mtime":1665190175274,"results":"10","hashOfConfig":"11"},{"size":429,"mtime":1665189290767,"results":"12","hashOfConfig":"11"},{"size":13915,"mtime":1665363793210,"results":"13","hashOfConfig":"11"},{"size":2390,"mtime":1665250525375,"results":"14","hashOfConfig":"11"},{"size":3787,"mtime":1665250961841,"results":"15","hashOfConfig":"11"},{"size":1615,"mtime":1665416124635,"results":"16","hashOfConfig":"11"},{"size":3038,"mtime":1665416124628,"results":"17","hashOfConfig":"11"},{"size":10954,"mtime":1665416124626,"results":"18","hashOfConfig":"11"},{"size":3536,"mtime":1665416124629,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hddru6",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\API\\CadProduto.js",["49"],[],"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Usuario\\nossosProdutos\\index.js",[],[],"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Administrador\\AddProduto\\index.js",["50","51","52","53","54","55","56","57","58"],[],"import MenuAdmin from \"../../../components/pagAdm.js\";\r\nimport { toast } from 'react-toastify';\r\nimport \"./index.scss\";\r\nimport \"../../../common/common.scss\"\r\nimport {  useEffect, useState } from \"react\";\r\nimport {  CadastrarCor, CadastrarPoduto, CadastrarTamanho, listarCategorias, listarTemas, salvarImagens, CadastrarImgDestaque} from '../../../API/CadProduto.js';\r\nimport DeletarItem from \"../../../components/delete.js\";\r\nimport { API_URL } from \"../../../API/config.js\";\r\n\r\nexport default function Index() {\r\n\r\n\r\n//VARIÁVEIS DE ESTADO\r\n\r\n    const [nome, setNome] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [preco, setPreco] = useState(0.0);\r\n    const [disponivel, setDisponivel] = useState(true);\r\n\r\n    const [idCategoria, setIdCategoria] = useState(0);\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    const [idTemas, setIdTemas] = useState(0);\r\n    const [Temas, setTemas] = useState([]);\r\n\r\n    const [catSelecionadas, setCatSelecionadas] = useState([]);\r\n\r\n    //imagens\r\n\r\n    const [imagem1, setImagem1] = useState();\r\n    const [imagem2, setImagem2] = useState();\r\n    const [imagem3, setImagem3] = useState();\r\n    const [imagem4, setImagem4] = useState();\r\n\r\n    // imagem destaque\r\n\r\n    const [destaque, setDestaque] = useState();\r\n\r\n\r\n// FUNÇÕES\r\n\r\n    //função imagem\r\n    function escolherImagem(inputId) {\r\n        document.getElementById(inputId).click();\r\n    }\r\n\r\n    function exibirImagem(imagem) {\r\n        if (imagem == undefined){\r\n            return '../images/add.png'\r\n        }\r\n        else if(typeof (imagem) == 'string'){\r\n            return `${API_URL}/${imagem}`\r\n        }\r\n        else {\r\n            return URL.createObjectURL(imagem)\r\n        }\r\n    }\r\n\r\n    // função imagem destaque\r\n    async function escolherDestaque(){\r\n        document.getElementById('imagemDestaque').click();\r\n    }\r\n\r\n    //cor\r\n    const [cor, setCor] = useState([]);\r\n    const [novaCor, setNovaCor] = useState('');\r\n\r\n    //tamanho\r\n    const [tamanho, setTamanho] = useState([]);\r\n    const [novoTamanho, setNovoTamanho] = useState('');\r\n\r\n\r\n    //funções cor e tamanho (renderização)\r\n\r\n\r\n    function delay(milliseconds) {\r\n        return new Promise (resolve => setTimeout(resolve, milliseconds)) // acabar com o delay\r\n    }\r\n\r\n    function arrayCor(){\r\n            let c= [... cor, novaCor];\r\n            setCor(c);\r\n    \r\n       // try {\r\n            //setCor([...cor, novaCor]);\r\n            //delay(500).then(_ => console.log(cor))\r\n            //const addCor= await CadastrarCor (cor);\r\n            //alert('Produto cadastrado com sucesso')\r\n            \r\n        //} catch (error) {\r\n          //  console.log();\r\n\r\n        //}\r\n    }\r\n\r\n    async function arrayTamanho(){\r\n        let T= [...tamanho, novoTamanho];\r\n        setTamanho(T);\r\n        //setTamanho([...tamanho, novoTamanho]);\r\n        //delay(500).then(_=> console.log(tamanho))\r\n    }\r\n\r\n    //\r\n\r\n    function Remover(t){\r\n        let c = cor.filter(item => item !== t);\r\n        let T = tamanho.filter(item => item !== t);\r\n        setCor(c)\r\n        setTamanho(T)\r\n    }\r\n\r\n    function Limpar(){\r\n        setCor([]);\r\n        setTamanho([]);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        Limpar();\r\n    }, [])\r\n\r\n \r\n    function buscarNomeCategoria(id) {\r\n        const cat = categorias.find(item => item.id == id);\r\n        return cat.categoria;\r\n    }\r\n    \r\n    function adicionarCategoria() {\r\n        if (!catSelecionadas.find(item => item == idCategoria)) {\r\n            const categorias = [...catSelecionadas, idCategoria];\r\n            setCatSelecionadas(categorias);\r\n        }\r\n    }\r\n\r\n\r\n    async function carregarTemas() {\r\n        const r = await listarTemas();\r\n        setTemas(r);\r\n    }\r\n\r\n\r\n    async function carregarCategorias() {\r\n\r\n        const r = await listarCategorias();\r\n        setCategorias(r);\r\n    }\r\n\r\n    // inserindo tamanho\r\n    async function inserirTamanho(id) {\r\n        for(let i=0; i<tamanho.length; i++) {\r\n        let x = await CadastrarTamanho(id, tamanho[i])\r\n        }\r\n    }\r\n\r\n\r\n    // inserindo cores\r\n    async function inserirCor(id) {\r\n        for(let i=0; i<cor.length; i++) {\r\n        let x = await CadastrarCor(id, cor[i])\r\n        }\r\n    }\r\n\r\n    // inserindo produto + cores + tamanho + imagens\r\n    async function salvar(){ \r\n        try {\r\n                // const precoProduto = Number(preco.replace(',', '.'));\r\n                if(!destaque){\r\n                    throw new Error('Imagem destaque obrigatória!');\r\n                }\r\n                if(!nome){\r\n                    throw new Error('Nome não inserido!')\r\n                }\r\n                \r\n                if(!descricao){\r\n                    throw new Error('Descrição não inserida')\r\n                }\r\n                if(!idCategoria){\r\n                    throw new Error('Categoria não inserido!')\r\n                }\r\n                \r\n                if(!idTemas){\r\n                    throw new Error('Tema não inserido!')\r\n                }\r\n                if(!cor){\r\n                    throw new Error('Cor não inserida!')\r\n                }\r\n                if(!tamanho){\r\n                    throw new Error('Tamanho não inserido!')\r\n                }\r\n                if(!preco){\r\n                    throw new Error('Preço não inserido!')\r\n                }\r\n                \r\n                if(!disponivel\r\n                    ){\r\n                    throw new Error('Disponibilidade não inserida!')\r\n                }\r\n                \r\n                const novoProduto = await CadastrarPoduto(nome, idTemas, idCategoria, descricao, preco, disponivel);\r\n                console.log(novoProduto)\r\n                \r\n                const dest = await CadastrarImgDestaque(novoProduto.id, destaque);\r\n        \r\n                console.log(dest);\r\n\r\n                const imgs = await salvarImagens(novoProduto.id, imagem1, imagem2, imagem3, imagem4);\r\n                \r\n                console.log(imgs);\r\n                \r\n                await inserirTamanho(novoProduto.id);\r\n                delay(100);\r\n                await inserirCor(novoProduto.id);\r\n                alert('Produto inserido')\r\n\r\n        }\r\n        catch (err) {\r\n            alert('erro: ' + err.message)\r\n        }\r\n    \r\n    }      \r\n    \r\n    useEffect(() => {\r\n        carregarCategorias();\r\n        carregarTemas();\r\n    }, [])\r\n\r\n    return (\r\n        <main className=\"inserirProduto\">\r\n\r\n                <MenuAdmin logo='../../../images/logoAdmin.png'/>\r\n\r\n                <div className=\"informacoes-produto\">\r\n\r\n                    <h1> Adicionar Produto </h1>\r\n\r\n                    <div className=\"inserir\">\r\n\r\n                        <div className=\"div1\">\r\n                            \r\n\r\n                            <div className=\"flex-column\">\r\n                                <label> Nome do Produto </label>\r\n                                <input type=\"text\" value={nome} onChange={e=> setNome(e.target.value)} className=\"input\"/>\r\n                            </div>\r\n\r\n                            <div className=\"flex-column\">\r\n                                <label> Descrição do Produto </label>\r\n                                <textarea type=\"text\" value={descricao} onChange={e=> setDescricao(e.target.value)} maxLength={100} className=\"textarea\"/>\r\n                            </div>\r\n\r\n                            \r\n\r\n                            <div className=\"flex-row space-between\">\r\n\r\n                                <div className=\"select-tamanho\">\r\n                                    <label> Categoria:</label>\r\n                                    <select className=\"select\" value={idCategoria} onChange={e => setIdCategoria(e.target.value)}>\r\n                                        <option> Vestimenta </option>\r\n\r\n                                        {categorias.map(item =>\r\n                                            <option value={item.id}> {item.nome} </option>\r\n                                        )}\r\n\r\n                                    </select>\r\n                                </div>\r\n\r\n                                \r\n\r\n                                <div className=\"select-tamanho\">\r\n\r\n                                    <label> Tema: </label>\r\n                                    <select className=\"select\" value={idTemas} onChange={e => setIdTemas(e.target.value)}>\r\n                                        <option> Harry Potter </option>\r\n\r\n                                        {Temas.map(item =>\r\n                                            <option value={item.id}> {item.nome} </option>\r\n                                        )}\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            \r\n                            <div className=\"div-array\">\r\n                                <label> Cor </label>\r\n\r\n                                <div className=\"flex-row wrapwrap\">\r\n\r\n                                    <input type=\"text\" value={novaCor} onChange={e => setNovaCor(e.target.value)} className=\"input input-item\"/> \r\n                                    <button onClick={arrayCor} className=\"button-ok\"> OK </button>\r\n                                    \r\n                                   {cor.map( item => \r\n                                        <div className=\"itemzinho\">\r\n                                            <DeletarItem  \r\n                                            key={item}\r\n                                            it={item}\r\n                                            deletarit={Remover}  />\r\n                                        </div>\r\n                                    )}\r\n                                  \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"div-array\">\r\n\r\n                                <label> Tamanhos </label>\r\n\r\n                                <div className=\"flex-row wrapwrap\">\r\n                                    <input value={novoTamanho}  className=\"input input-item\" onChange={e => setNovoTamanho(e.target.value)}/> \r\n\r\n                                    <button onClick={arrayTamanho} className=\"button-ok\"> OK </button>\r\n\r\n                                    {tamanho.map( item => \r\n                                        <div className=\"itemzinho\" >\r\n                                            <DeletarItem  \r\n                                            key={item}\r\n                                            it={item}\r\n                                            deletarit={Remover}  />\r\n                                        </div>\r\n                                    )}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"flex-column\"> \r\n\r\n                                <label > Valor </label>\r\n                                <input type=\"text\" value={preco} onChange={e=> setPreco(e.target.value)} className=\"imagem-input\"/>\r\n                           \r\n                            </div>\r\n                \r\n\r\n                            <div>\r\n                                <div> \r\n                                     <label > Disponível ?</label> \r\n                                     <input type=\"checkbox\" checked={disponivel} onChange={e=> setDisponivel(e.target.checked)}/>\r\n                                </div>\r\n                            </div> \r\n\r\n                        </div>\r\n\r\n                        <div className=\"div2\">\r\n                            <div>\r\n\r\n                                <h1> Foto Destaque </h1>\r\n\r\n                                <img \r\n                                    className=\"img\" \r\n                                    src={exibirImagem(destaque)}\r\n                                    alt='' \r\n                                    onClick={escolherDestaque}  \r\n                                />\r\n\r\n\r\n                                <input \r\n                                type=\"file\" \r\n                                id=\"imagemDestaque\"\r\n                                onChange={e => setDestaque(e.target.files[0])} \r\n                                />\r\n                                \r\n                            </div>\r\n\r\n                            <div className=\"flex-column\"> \r\n\r\n                                <h1> Fotos Extras</h1>\r\n\r\n                                <div>\r\n                                    <img className=\"img\" src={exibirImagem(imagem1)} alt='' onClick={() => escolherImagem('imagem1')}/>\r\n                                    <img className=\"img\" src={exibirImagem(imagem2)}  alt='' onClick={() => escolherImagem('imagem2')}/>\r\n                                    <img className=\"img\" src={exibirImagem(imagem3)}  alt='' onClick={() => escolherImagem('imagem3')}/>\r\n                                    <img className=\"img\" src={exibirImagem(imagem4)}  alt='' onClick={() => escolherImagem('imagem4')}/>\r\n\r\n                                    <input type='file' id='imagem1' onChange={e => setImagem1(e.target.files[0])} />\r\n                                    <input type='file' id='imagem2' onChange={e => setImagem2(e.target.files[0])} />\r\n                                    <input type='file' id='imagem3' onChange={e => setImagem3(e.target.files[0])} />\r\n                                    <input type='file' id='imagem4' onChange={e => setImagem4(e.target.files[0])} />\r\n                                </div>\r\n                                \r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <button onClick={salvar} className=\"button centralizar\"> Adicionar </button>\r\n\r\n                </div>\r\n\r\n                \r\n        </main>\r\n\r\n    )\r\n}","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\components\\cabecalho.js",["59","60","61","62"],[],"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Usuario\\Menu\\index.js",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],[],"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\routes.js",[],[],"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Administrador\\Produtos\\index.js",[],[],"C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Administrador\\AlterarProduto\\index.js",["83","84","85","86","87","88","89","90","91","92","93"],[],"import { listarCategorias, listarTemas, buscarProdutoPorId } from \"../../../API/CadProduto\";\r\nimport MenuAdmin from \"../../../components/pagAdm\";\r\nimport DeletarItem from \"../../../components/delete\";\r\nimport { API_URL } from \"../../../API/config.js\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nexport default function Index() {\r\n\r\n    // VARIÁVEIS DE ESTADO\r\n\r\n    const { id } = useParams();\r\n\r\n    const [produto, setProduto] = useState([]);\r\n    const [idProduto, setIdProduto] = useState(id);\r\n\r\n    \r\n    const [nome, setNome] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [preco, setPreco] = useState(0.0);\r\n    const [disponivel, setDisponivel] = useState(true);\r\n\r\n    const [idCategoria, setIdCategoria] = useState(0);\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    const [idTemas, setIdTemas] = useState(0);\r\n    const [Temas, setTemas] = useState([]);\r\n\r\n    const [catSelecionadas, setCatSelecionadas] = useState([]);\r\n\r\n    \r\n    //cor\r\n    const [cor, setCor] = useState([]);\r\n    const [novaCor, setNovaCor] = useState('');\r\n\r\n    //tamanho\r\n    const [tamanho, setTamanho] = useState([]);\r\n    const [novoTamanho, setNovoTamanho] = useState('');\r\n    \r\n\r\n    //imagens\r\n\r\n    const [imagem1, setImagem1] = useState();\r\n    const [imagem2, setImagem2] = useState();\r\n    const [imagem3, setImagem3] = useState();\r\n    const [imagem4, setImagem4] = useState();\r\n\r\n    // imagem destaque\r\n\r\n    const [destaque, setDestaque] = useState();\r\n\r\n// FUNÇÕES\r\n\r\n    //funções cor e tamanho (renderização)\r\n\r\n\r\n    function delay(milliseconds) {\r\n        return new Promise (resolve => setTimeout(resolve, milliseconds)) // acabar com o delay\r\n    }\r\n\r\n    function arrayCor(){\r\n            let c= [... cor, novaCor];\r\n            setCor(c);\r\n    }\r\n\r\n    async function arrayTamanho(){\r\n        let T= [...tamanho, novoTamanho];\r\n        setTamanho(T);\r\n    }\r\n\r\n\r\n    function Remover(t){\r\n        let c = cor.filter(item => item !== t);\r\n        let T = tamanho.filter(item => item !== t);\r\n        setCor(c)\r\n        setTamanho(T)\r\n    }\r\n\r\n    function Limpar(){\r\n        setCor([]);\r\n        setTamanho([]);\r\n    }\r\n\r\n    //função imagem\r\n    function escolherImagem(inputId) {\r\n       document.getElementById(inputId).click();\r\n    }\r\n\r\n    \r\n    function exibirImagem(imagem) {\r\n        if (imagem == undefined){\r\n            return '../images/add.png'\r\n        }\r\n        else if(typeof (imagem) == 'string'){\r\n            return `${API_URL}/${imagem}`\r\n        }\r\n        else {\r\n            return URL.createObjectURL(imagem)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        Limpar();\r\n    }, [])\r\n\r\n \r\n    function buscarNomeCategoria(id) {\r\n        const cat = categorias.find(item => item.id == id);\r\n        return cat.categoria;\r\n    }\r\n    \r\n    function adicionarCategoria() {\r\n        if (!catSelecionadas.find(item => item == idCategoria)) {\r\n            const categorias = [...catSelecionadas, idCategoria];\r\n            setCatSelecionadas(categorias);\r\n        }\r\n    }\r\n\r\n\r\n    async function carregarTemas() {\r\n        const r = await listarTemas();\r\n        setTemas(r);\r\n    }\r\n\r\n\r\n    async function carregarCategorias() {\r\n        const r = await listarCategorias();\r\n        setCategorias(r);\r\n    }\r\n\r\n    async function carregarProduto(){\r\n        console.log('hm')\r\n        if (!id) return;\r\n        console.log('chamada')\r\n        const r= await buscarProdutoPorId(id);\r\n        setIdProduto(id);\r\n        setNome(r.info.nome);\r\n        setDescricao(r.info.descricao);\r\n        setPreco(r.info.preco);\r\n        setDisponivel(r.info.disponivel);\r\n        const a = r.cores;\r\n        const b = r.tamanho;\r\n        console.log(a)\r\n        console.log(b)\r\n\r\n        setCor(a);\r\n        setTamanho(b);\r\n\r\n        if(r.imagens.length > 0){\r\n            setImagem1(r.imagens[0]);\r\n        }\r\n        if(r.imagens.length > 1){\r\n            setImagem2(r.imagens[1]);\r\n        }\r\n        if(r.imagens.length > 2){\r\n            setImagem3(r.imagens[3]);\r\n        }\r\n        if(r.imagens.length > 3){\r\n            setImagem4(r.imagens[3]);\r\n        }\r\n        setDestaque(r.destaque.url);\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        carregarCategorias();\r\n        carregarTemas();\r\n        carregarProduto();\r\n        console.log(id);\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <main className=\"inserirProduto\">\r\n\r\n        <MenuAdmin logo='../../../images/logoAdmin.png'/>\r\n\r\n        <div className=\"informacoes-produto\">\r\n\r\n            <h1> Alterar Produto </h1>\r\n\r\n            <div className=\"inserir\">\r\n\r\n                <div className=\"div1\">\r\n                    \r\n\r\n                    <div className=\"flex-column\">\r\n                        <label> Nome do Produto </label>\r\n                        <input type=\"text\" value={nome} onChange={e=> setNome(e.target.value)} className=\"input\"/>\r\n                    </div>\r\n\r\n                    <div className=\"flex-column\">\r\n                        <label> Descrição do Produto </label>\r\n                        <textarea type=\"text\" value={descricao} onChange={e=> setDescricao(e.target.value)} maxLength={100} className=\"textarea\"/>\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"flex-row space-between\">\r\n\r\n                        <div className=\"select-tamanho\">\r\n                            <label> Categoria:</label>\r\n                            <select className=\"select\" value={idCategoria} onChange={e => setIdCategoria(e.target.value)}>\r\n                                <option> Vestimenta </option>\r\n\r\n                                {categorias.map(item =>\r\n                                    <option value={item.id}> {item.nome} </option>\r\n                                )}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        \r\n\r\n                        <div className=\"select-tamanho\">\r\n\r\n                            <label> Tema: </label>\r\n                            <select className=\"select\" value={idTemas} onChange={e => setIdTemas(e.target.value)}>\r\n                                <option> Harry Potter </option>\r\n\r\n                                {Temas.map(item =>\r\n                                    <option value={item.id}> {item.nome} </option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"div-array\">\r\n                        <label> Cor </label>\r\n\r\n                        <div className=\"flex-row wrapwrap\">\r\n\r\n                            <input type=\"text\" value={novaCor} onChange={e => setNovaCor(e.target.value)} className=\"input input-item\"/> \r\n                            <button onClick={arrayCor} className=\"button-ok\"> OK </button>\r\n                            \r\n                           {cor.map( item => \r\n                                <div className=\"itemzinho\">\r\n                                    <DeletarItem  \r\n                                    key={item}\r\n                                    it={item}\r\n                                    deletarit={Remover}  />\r\n                                </div>\r\n                            )}\r\n                          \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"div-array\">\r\n\r\n                        <label> Tamanhos </label>\r\n\r\n                        <div className=\"flex-row wrapwrap\">\r\n                            <input value={novoTamanho}  className=\"input input-item\" onChange={e => setNovoTamanho(e.target.value)}/> \r\n\r\n                            <button onClick={arrayTamanho} className=\"button-ok\"> OK </button>\r\n\r\n                            {tamanho.map( item => \r\n                                <div className=\"itemzinho\" >\r\n                                    <DeletarItem  \r\n                                    key={item}\r\n                                    it={item}\r\n                                    deletarit={Remover}  />\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flex-column\"> \r\n\r\n                        <label > Valor </label>\r\n                        <input type=\"text\" value={preco} onChange={e=> setPreco(e.target.value)} className=\"imagem-input\"/>\r\n                   \r\n                    </div>\r\n        \r\n\r\n                    <div>\r\n                        <div> \r\n                             <label > Disponível ?</label> \r\n                             <input type=\"checkbox\" checked={disponivel} onChange={e=> setDisponivel(e.target.checked)}/>\r\n                        </div>\r\n                    </div> \r\n\r\n                </div>\r\n\r\n                <div className=\"div2\">\r\n                    <div>\r\n\r\n                        <h1> Foto Destaque </h1>\r\n\r\n                        <img \r\n                            className=\"img\" \r\n                            src={exibirImagem(destaque)}\r\n                            alt='' \r\n                            // onClick={escolherDestaque}  \r\n                        />\r\n\r\n\r\n                        <input \r\n                        type=\"file\" \r\n                        id=\"imagemDestaque\"\r\n                        onChange={e => setDestaque(e.target.files[0])} \r\n                        />\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"flex-column\"> \r\n\r\n                        <h1> Fotos Extras</h1>\r\n\r\n                        <div>\r\n                            <img className=\"img\" src={exibirImagem(imagem1)} alt='' onClick={() => escolherImagem('imagem1')}/>\r\n                            <img className=\"img\" src={exibirImagem(imagem2)}  alt='' onClick={() => escolherImagem('imagem2')}/>\r\n                            <img className=\"img\" src={exibirImagem(imagem3)}  alt='' onClick={() => escolherImagem('imagem3')}/>\r\n                            <img className=\"img\" src={exibirImagem(imagem4)}  alt='' onClick={() => escolherImagem('imagem4')}/>\r\n\r\n                            <input type='file' id='imagem1' onChange={e => setImagem1(e.target.files[0])} />\r\n                            <input type='file' id='imagem2' onChange={e => setImagem2(e.target.files[0])} />\r\n                            <input type='file' id='imagem3' onChange={e => setImagem3(e.target.files[0])} />\r\n                            <input type='file' id='imagem4' onChange={e => setImagem4(e.target.files[0])} />\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <button className=\"button centralizar\"> Adicionar </button>\r\n\r\n        </div>\r\n        \r\n</main>\r\n\r\n    )\r\n}","C:\\Users\\Lenovo\\TECH GIRLS\\TCC_TECHGIRLS-2\\site\\src\\pages\\Usuario\\cadastroUsuario\\index.js",["94","95"],[],{"ruleId":"96","severity":1,"message":"97","line":86,"column":11,"nodeType":"98","messageId":"99","endLine":86,"endColumn":12},{"ruleId":"96","severity":1,"message":"100","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":48,"column":20,"nodeType":"103","messageId":"104","endLine":48,"endColumn":22},{"ruleId":"105","severity":1,"message":"106","line":81,"column":24,"nodeType":"107","messageId":"108","endLine":81,"endColumn":25,"fix":"109"},{"ruleId":"96","severity":1,"message":"110","line":123,"column":14,"nodeType":"98","messageId":"99","endLine":123,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":124,"column":53,"nodeType":"103","messageId":"104","endLine":124,"endColumn":55},{"ruleId":"96","severity":1,"message":"111","line":128,"column":14,"nodeType":"98","messageId":"99","endLine":128,"endColumn":32},{"ruleId":"101","severity":1,"message":"102","line":129,"column":48,"nodeType":"103","messageId":"104","endLine":129,"endColumn":50},{"ruleId":"96","severity":1,"message":"112","line":151,"column":13,"nodeType":"98","messageId":"99","endLine":151,"endColumn":14},{"ruleId":"96","severity":1,"message":"112","line":159,"column":13,"nodeType":"98","messageId":"99","endLine":159,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":44,"column":21,"nodeType":"115","endLine":44,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":45,"column":21,"nodeType":"115","endLine":45,"endColumn":61},{"ruleId":"113","severity":1,"message":"114","line":46,"column":21,"nodeType":"115","endLine":46,"endColumn":63},{"ruleId":"113","severity":1,"message":"114","line":52,"column":17,"nodeType":"115","endLine":52,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":11,"column":17,"nodeType":"115","endLine":11,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":14,"column":17,"nodeType":"115","endLine":14,"endColumn":77},{"ruleId":"113","severity":1,"message":"114","line":17,"column":17,"nodeType":"115","endLine":17,"endColumn":77},{"ruleId":"113","severity":1,"message":"114","line":20,"column":17,"nodeType":"115","endLine":20,"endColumn":77},{"ruleId":"113","severity":1,"message":"114","line":24,"column":17,"nodeType":"115","endLine":24,"endColumn":82},{"ruleId":"113","severity":1,"message":"114","line":27,"column":21,"nodeType":"115","endLine":27,"endColumn":59},{"ruleId":"113","severity":1,"message":"114","line":28,"column":21,"nodeType":"115","endLine":28,"endColumn":78},{"ruleId":"113","severity":1,"message":"114","line":33,"column":25,"nodeType":"115","endLine":33,"endColumn":70},{"ruleId":"113","severity":1,"message":"114","line":35,"column":25,"nodeType":"115","endLine":35,"endColumn":68},{"ruleId":"113","severity":1,"message":"114","line":37,"column":25,"nodeType":"115","endLine":37,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":39,"column":25,"nodeType":"115","endLine":39,"endColumn":67},{"ruleId":"113","severity":1,"message":"114","line":43,"column":25,"nodeType":"115","endLine":43,"endColumn":64},{"ruleId":"113","severity":1,"message":"114","line":45,"column":25,"nodeType":"115","endLine":45,"endColumn":74},{"ruleId":"113","severity":1,"message":"114","line":47,"column":25,"nodeType":"115","endLine":47,"endColumn":73},{"ruleId":"113","severity":1,"message":"114","line":49,"column":25,"nodeType":"115","endLine":49,"endColumn":64},{"ruleId":"113","severity":1,"message":"114","line":55,"column":17,"nodeType":"115","endLine":55,"endColumn":76},{"ruleId":"113","severity":1,"message":"114","line":59,"column":13,"nodeType":"115","endLine":59,"endColumn":76},{"ruleId":"113","severity":1,"message":"114","line":64,"column":21,"nodeType":"115","endLine":64,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":65,"column":21,"nodeType":"115","endLine":65,"endColumn":57},{"ruleId":"113","severity":1,"message":"114","line":66,"column":21,"nodeType":"115","endLine":66,"endColumn":58},{"ruleId":"96","severity":1,"message":"116","line":16,"column":12,"nodeType":"98","messageId":"99","endLine":16,"endColumn":19},{"ruleId":"96","severity":1,"message":"117","line":16,"column":21,"nodeType":"98","messageId":"99","endLine":16,"endColumn":31},{"ruleId":"96","severity":1,"message":"118","line":17,"column":12,"nodeType":"98","messageId":"99","endLine":17,"endColumn":21},{"ruleId":"96","severity":1,"message":"119","line":59,"column":14,"nodeType":"98","messageId":"99","endLine":59,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":64,"column":24,"nodeType":"107","messageId":"108","endLine":64,"endColumn":25,"fix":"120"},{"ruleId":"101","severity":1,"message":"102","line":93,"column":20,"nodeType":"103","messageId":"104","endLine":93,"endColumn":22},{"ruleId":"96","severity":1,"message":"110","line":110,"column":14,"nodeType":"98","messageId":"99","endLine":110,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":111,"column":53,"nodeType":"103","messageId":"104","endLine":111,"endColumn":55},{"ruleId":"96","severity":1,"message":"111","line":115,"column":14,"nodeType":"98","messageId":"99","endLine":115,"endColumn":32},{"ruleId":"101","severity":1,"message":"102","line":116,"column":48,"nodeType":"103","messageId":"104","endLine":116,"endColumn":50},{"ruleId":"121","severity":1,"message":"122","line":174,"column":8,"nodeType":"123","endLine":174,"endColumn":10,"suggestions":"124"},{"ruleId":"101","severity":1,"message":"102","line":23,"column":19,"nodeType":"103","messageId":"104","endLine":23,"endColumn":21},{"ruleId":"96","severity":1,"message":"125","line":24,"column":15,"nodeType":"98","messageId":"99","endLine":24,"endColumn":16},"no-unused-vars","'r' is assigned a value but never used.","Identifier","unusedVar","'toast' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"126","text":"127"},"'buscarNomeCategoria' is defined but never used.","'adicionarCategoria' is defined but never used.","'x' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'produto' is assigned a value but never used.","'setProduto' is assigned a value but never used.","'idProduto' is assigned a value but never used.","'delay' is defined but never used.",{"range":"128","text":"127"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'carregarProduto' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["129"],"'b' is assigned a value but never used.",[2356,2357],"",[1838,1839],{"desc":"130","fix":"131"},"Update the dependencies array to be: [carregarProduto, id]",{"range":"132","text":"133"},[4414,4416],"[carregarProduto, id]"]